#+TITLE: 为何我选择python，python擅长什么，python的特点是什么
#+URL: http://slott-softwarearchitect.blogspot.com/2016/05/why-python-whats-it-good-for-how-is-it.html
#+AUTHOR: lujun9972
#+CATEGORY: Python Common
#+DATE: [2016-06-07 二 19:04]
#+OPTIONS: ^:{}

首先,上述问题是无意义的. Python是一门编程语言,当然它擅长于编程咯.

When I push back, 人们常常为了一个特定的目的而发明一门语言.

"你知道的. PHP是专为web而生的, 而JavaScript浏览器中运行. 那么Python是用来作什么的?"

举PHP和JavaScript的例子并没有什么意义. 这两个例子并不意味着Python只适用于解决Web领域的问题,它们只能说明PHP和JavaScript只适用于Web领域的开发.

"你知道的. Objective-C 和 Swift 用于 iOS. 那么Python在哪个平台上占主要地位呢?"

Python也可以运行在iOS上. 我不确定用Python创建app是否足够便利, 但即使足够便利, 我的答案也不会变: Python擅长于编程.

"Java主要用于搭建web app对吧? 那么Python呢?"

好吧. 到了这一步, 这个问题已经不仅仅是无聊了,简直就是愚蠢.

我简直不想对这个问题做出回答.

若你想知道这个问题的答案,请阅读下面的链接:

http://web.eecs.umich.edu/~bchandra/courses/papers/Wirth_Design.pdf

是的,这是一篇1974年写的文章,里面的有些观点已经有些过时了, 但是其中大部分的观点依然有用. 
例如,虽然有争议,但强类型指针的设计已经几乎成为业界标准了. Wirth的观点依然影响着程序语言的设计.

该文的第28页中,Pascal,Modula,Oberon以及其他程序语言的发明人列举了一个程序语言的特征列表. 

列表中的某些特征已经过时了,例如关于多字符集的描述,由于Unicode的出现已经不重要了

另外,这张特征列表也仅仅是针对编译语言来说的. 而Python是一门动态语言,它是解释型的. 虽然Python也有一个编译器,但是它的作用基本上也只是优化源代码而已. 若你将列表中的"编译器"替代为"运行时",则这个列表所描述的就是一个好语言应该具有哪些特性.

我喜欢这张列表因为它能解释Python以及其他许多语言为什么如此优秀.  它也解释了为什么像JavaScript(甚至也包括Ruby)这样的语言看起来那么奇怪. 此外,关于效率的一些观点是一些值得深入讨论的重要主题.

我常常提醒那些搞大数据的家伙,处理大数据时最影响效率的地方在于I/O. Python在等待数据库结果时要比java稍微有效率一些. 为什么会这样呢? 这是因为Python消耗的内存更少.

我们不要再提关于通用语言的愚蠢问题了. 我们所要做的是对各解决方案作基准测试.然后基于实际的代码来对比性能.
